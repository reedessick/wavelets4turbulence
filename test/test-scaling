#!/usr/bin/env python3

"""a simple testing script to figure out syntax and which calculations are useful
"""
__author__ = "Reed Essick (reed.essick@gmail.com)"

#-------------------------------------------------

import numpy as np

from argparse import ArgumentParser

### non-standard libraries
from w4t import haar
import utils # local!

#-------------------------------------------------

parser = ArgumentParser()

#---

parser.add_argument('-n', '--num-grid', type=int, default=32,
    help='the number of grid points used when constructing random data instead of reading from --path')

parser.add_argument('--seed', default=None, type=int)

#---

parser.add_argument('-v', '--verbose', default=False, action='store_true')
parser.add_argument('-V', '--Verbose', default=False, action='store_true')

#---

args = parser.parse_args()

args.verbose |= args.Verbose

#-------------------------------------------------

utils.seed(args.seed, verbose=args.verbose)

#-------------------------------------------------

data = utils.load(
    ['field'],
    path=args.path,
    num_grid=args.num_grid,
    max_edgelength=args.max_edgelength,
    verbose=args.verbose,
)

#-------------------------------------------------

field = 'field'

raise NotImplementedError('''
for field in args.field:

    if args.verbose:
        print('examining field: '+field)

    if (data[field].shape[0] > 1) and args.Verbose:
        print('WARNING: only examining index 0 of field')

    # basic instantiation
    ha = haar.HaarArray(data[field][0])

    if args.Verbose:
        print(ha.array)

    if args.verbose:
        print('    ndim', ha.ndim)
        print('    shape', ha.shape)

        print('    active', ha.active)
        print('    levels', ha.levels)
        print('    scales', ha.scales)
        print('    wavenumbers', ha.wavenumbers)

    #---

    if args.verbose:
        print('testing Haar decomposition of: '+field)
#    test_transform(ha, verbose=args.verbose)
''')
